'use client';

import { useState } from "react";
import {
    Tabs,
    TabsContent,
    TabsList,
    TabsTrigger,
} from "@/components/ui/tabs";
import {
    Card,
    CardAction,
    CardContent,
    CardDescription,
    CardFooter,
    CardHeader,
    CardTitle,
} from "@/components/ui/card";
import {
    UserPlus,
    RefreshCw,
    Lock,
    DollarSign,
    TrendingUp,
    ArrowUpRight
} from "lucide-react";
import NewMemberRevenew from "./revenewcomponents/NewAdmissionRevenew";
import MembershipRenewal from "./revenewcomponents/MembershipRenewal";
import LockerRevenew from "./revenewcomponents/LockerRevenew";
import TotalRevenew from "./revenewcomponents/TotalRevenew";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { toast } from "sonner";
import { useQuery } from "@tanstack/react-query";
import { useUser } from "@/components/Providers/LoggedInUserProvider";

const RevenewDashboard = () => {

    const { user } = useUser();
    const loggedInUser = user?.user;

    // Pagination
    const [currentPage, setCurrentPage] = useState(1)
    const limit = 6;

    const [startDate, setStartDate] = useState(() => {
        const today = new Date();
        today.setDate(today.getDate() - 7);
        return today.toISOString().split('T')[0];
    });

    const [endDate, setEndDate] = useState(() => {
        const today = new Date();
        today.setDate(today.getDate() + 1);
        return today.toISOString().split('T')[0];
    });

    // @GET Get new members revenew
    const getNewMembersRevenewData = async ({ queryKey }) => {
        const [, startDate, endDate, currentPage, limit] = queryKey;
        try {
            const response = await fetch(`http://localhost:3000/api/revenew/new-admission-revenew?startDate=${startDate}&endDate=${endDate}&page=${currentPage}&limit=${limit}`);
            const resBody = await response.json();
            return resBody;
        } catch (error) {
            console.log("Error: ", error);
            toast.error(error.message || 'Internal server error');
        };
    };

    const { data: newmemberrevenewdata, isLoading: isNewMemberDataLoading } = useQuery({
        queryKey: ['newmemberrevenew', startDate, endDate, currentPage, limit],
        queryFn: getNewMembersRevenewData,
    });

    const { count, members, totalRevenue: totalNewMemberRevenue, totalMembers, totalPages } = newmemberrevenewdata || {};


    // @GET Get revenew data generated by renewed members
    const getRenewedMembersRevenewData = async ({ queryKey }) => {
        const [, startDate, endDate, currentPage, limit] = queryKey;
        try {
            const response = await fetch(`http://localhost:3000/api/revenew/renewd-members?startDate=${startDate}&endDate=${endDate}&page=${currentPage}&limit=${limit}`);
            const resBody = await response.json();
            return resBody;
        } catch (error) {
            console.log("Error: ", error);
            toast.error(error.message || 'Internal server error');
        };
    };

    const { data: revenewDataByRenew } = useQuery({
        queryKey: ['revenewbyrenew', startDate, endDate, currentPage, limit],
        queryFn: getRenewedMembersRevenewData
    });

    const { members: renewdMembers, totalRevenue: totalRenewMemberRevenue, totalMembers: renewdTotalMembers, totalPages: renewdTotalPages } = revenewDataByRenew || {};

    return (
        <div className="w-full space-y-4">
            <Card className='dark:bg-gray-900 dark:border-none grid grid-cols-1 lg:grid-cols-2 gap-4 p-4'>
                <div>
                    <Label>Start Date</Label>
                    <Input
                        value={startDate}
                        onChange={(e) => setStartDate(new Date(e.target.value).toISOString().split("T")[0])}
                        type='date'
                        className='dark:bg-gray-800 bg-white py-6 rounded-sm dark:border-none'
                    />
                </div>
                <div>
                    <Label>End Date</Label>
                    <Input
                        value={endDate}
                        onChange={(e) => setEndDate(new Date(e.target.value).toISOString().split("T")[0])}
                        type='date'
                        className='dark:bg-gray-800 bg-white py-6 rounded-sm dark:border-none'
                    />
                </div>
            </Card>
            <Tabs defaultValue="newadmissionrenewal" className="w-full">
                <TabsList className='w-full grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 h-auto bg-transparent p-0'>
                    <TabsTrigger
                        value="newadmissionrenewal"
                        className="p-0 data-[state=active]:bg-transparent data-[state=active]:shadow-none h-auto w-full"
                    >
                        <Card className="w-full h-full bg-gray-50 dark:bg-gray-900 cursor-pointer transition-all duration-300 hover:shadow-lg hover:scale-105 border-2 border-transparent data-[state=active]:border-blue-500 data-[state=active]:shadow-lg group">
                            <CardContent className="p-6">
                                <div className="flex items-start justify-between mb-4">
                                    <div className="p-3 rounded-xl bg-blue-50 dark:bg-blue-900/20 group-hover:bg-blue-100 dark:group-hover:bg-blue-900/30 transition-colors">
                                        <UserPlus className="w-6 h-6 text-blue-600 dark:text-blue-400" />
                                    </div>
                                    <div className="flex items-center text-green-600 dark:text-green-400">
                                        <TrendingUp className="w-4 h-4 mr-1" />
                                        <span className="text-sm font-medium">+12%</span>
                                    </div>
                                </div>
                                <div className="space-y-2">
                                    <h3 className="text-lg font-semibold text-gray-800 dark:text-gray-100">
                                        New Admission Revenue
                                    </h3>
                                    <div className="flex items-baseline space-x-2">
                                        <span className="text-2xl font-bold text-gray-900 dark:text-white">
                                            {loggedInUser?.organization?.currency || 'N/A'} {totalNewMemberRevenue ? totalNewMemberRevenue : 'N/A'}
                                        </span>
                                        <ArrowUpRight className="w-4 h-4 text-green-500" />
                                    </div>
                                    <p className="text-sm text-gray-600 dark:text-gray-400">
                                        New members revenew
                                    </p>
                                </div>
                            </CardContent>
                        </Card>
                    </TabsTrigger>

                    <TabsTrigger
                        value="membershiprenewal"
                        className="p-0 data-[state=active]:bg-transparent data-[state=active]:shadow-none h-auto w-full"
                    >
                        <Card className="w-full h-full bg-gray-50 dark:bg-gray-900 cursor-pointer transition-all duration-300 hover:shadow-lg hover:scale-105 border-2 border-transparent data-[state=active]:border-green-500 data-[state=active]:shadow-lg group">
                            <CardContent className="p-6">
                                <div className="flex items-start justify-between mb-4">
                                    <div className="p-3 rounded-xl bg-green-50 dark:bg-green-900/20 group-hover:bg-green-100 dark:group-hover:bg-green-900/30 transition-colors">
                                        <RefreshCw className="w-6 h-6 text-green-600 dark:text-green-400" />
                                    </div>
                                    <div className="flex items-center text-green-600 dark:text-green-400">
                                        <TrendingUp className="w-4 h-4 mr-1" />
                                        <span className="text-sm font-medium">+8%</span>
                                    </div>
                                </div>
                                <div className="space-y-2">
                                    <h3 className="text-lg font-semibold text-gray-800 dark:text-gray-100">
                                        Membership Renewal
                                    </h3>
                                    <div className="flex items-baseline space-x-2">
                                        <span className="text-2xl font-bold text-gray-900 dark:text-white">
                                            {loggedInUser?.organization?.currency || 'N/A'} {totalRenewMemberRevenue ? totalRenewMemberRevenue : 0}
                                        </span>
                                        <ArrowUpRight className="w-4 h-4 text-green-500" />
                                    </div>
                                    <p className="text-sm text-gray-600 dark:text-gray-400">
                                        Membership renewal revenew
                                    </p>
                                </div>
                            </CardContent>
                        </Card>
                    </TabsTrigger>

                    <TabsTrigger
                        value="lockerrenewal"
                        className="p-0 data-[state=active]:bg-transparent data-[state=active]:shadow-none h-auto w-full"
                    >
                        <Card className="w-full h-full bg-gray-50 dark:bg-gray-900 cursor-pointer transition-all duration-300 hover:shadow-lg hover:scale-105 border-2 border-transparent data-[state=active]:border-purple-500 data-[state=active]:shadow-lg group">
                            <CardContent className="p-6">
                                <div className="flex items-start justify-between mb-4">
                                    <div className="p-3 rounded-xl bg-purple-50 dark:bg-purple-900/20 group-hover:bg-purple-100 dark:group-hover:bg-purple-900/30 transition-colors">
                                        <Lock className="w-6 h-6 text-purple-600 dark:text-purple-400" />
                                    </div>
                                    <div className="flex items-center text-green-600 dark:text-green-400">
                                        <TrendingUp className="w-4 h-4 mr-1" />
                                        <span className="text-sm font-medium">+15%</span>
                                    </div>
                                </div>
                                <div className="space-y-2">
                                    <h3 className="text-lg font-semibold text-gray-800 dark:text-gray-100">
                                        Lockers Renewal
                                    </h3>
                                    <div className="flex items-baseline space-x-2">
                                        <span className="text-2xl font-bold text-gray-900 dark:text-white">
                                            {loggedInUser?.organization?.currency || 'N/A'} NPR 500,000
                                        </span>
                                        <ArrowUpRight className="w-4 h-4 text-green-500" />
                                    </div>
                                    <p className="text-sm text-gray-600 dark:text-gray-400">
                                        Revenue generated by lockers
                                    </p>
                                </div>
                            </CardContent>
                        </Card>
                    </TabsTrigger>

                    <TabsTrigger
                        value="totalrevenew"
                        className="p-0 data-[state=active]:bg-transparent data-[state=active]:shadow-none h-auto w-full"
                    >
                        <Card className="w-full h-full bg-gray-50 dark:bg-gray-900 cursor-pointer transition-all duration-300 hover:shadow-lg hover:scale-105 border-2 border-transparent data-[state=active]:border-orange-500 data-[state=active]:shadow-lg group">
                            <CardContent className="p-6">
                                <div className="flex items-start justify-between mb-4">
                                    <div className="p-3 rounded-xl bg-gradient-to-br from-orange-50 to-yellow-50 dark:from-orange-900/20 dark:to-yellow-900/20 group-hover:from-orange-100 group-hover:to-yellow-100 dark:group-hover:from-orange-900/30 dark:group-hover:to-yellow-900/30 transition-all">
                                        <DollarSign className="w-6 h-6 text-orange-600 dark:text-orange-400" />
                                    </div>
                                    <div className="flex items-center text-green-600 dark:text-green-400">
                                        <TrendingUp className="w-4 h-4 mr-1" />
                                        <span className="text-sm font-medium">+11%</span>
                                    </div>
                                </div>
                                <div className="space-y-2">
                                    <h3 className="text-lg font-semibold text-gray-800 dark:text-gray-100">
                                        Total Revenue
                                    </h3>
                                    <div className="flex items-baseline space-x-2">
                                        <span className="text-2xl font-bold bg-gradient-to-r from-orange-600 to-yellow-600 dark:from-orange-400 dark:to-yellow-400 bg-clip-text text-transparent">
                                            {loggedInUser?.organization?.currency || 'N/A'} NPR 1,500,000
                                        </span>
                                        <ArrowUpRight className="w-4 h-4 text-green-500" />
                                    </div>
                                    <p className="text-sm text-gray-600 dark:text-gray-400">
                                        Total revenue generated
                                    </p>
                                </div>
                            </CardContent>
                        </Card>
                    </TabsTrigger>
                </TabsList>

                <div className="mt-4">
                    <TabsContent value="newadmissionrenewal" className="mt-0">
                        <NewMemberRevenew data={newmemberrevenewdata} isLoading={isNewMemberDataLoading} currentPage={currentPage} setCurrentPage={setCurrentPage} totalPages={totalPages} totalMembers={totalMembers} />
                    </TabsContent>
                    <TabsContent value="membershiprenewal" className="mt-0">
                        <MembershipRenewal data={revenewDataByRenew} isLoading={isNewMemberDataLoading} currentPage={currentPage} setCurrentPage={setCurrentPage} totalPages={renewdTotalPages} totalMembers={totalMembers} />
                    </TabsContent>
                    <TabsContent value="lockerrenewal" className="mt-0">
                        <LockerRevenew />
                    </TabsContent>
                    <TabsContent value="totalrevenew" className="mt-0">
                        <TotalRevenew />
                    </TabsContent>
                </div>
            </Tabs>
        </div>
    )
}

export default RevenewDashboard;
